
# try to find autoconf 2.13 - discard errors from 'which'
# MacOS X 10.4 sends "no autoconf*" errors to stdout, discard those via grep
AUTOCONF ?= $(shell which autoconf-2.13 autoconf2.13 autoconf213 2>/dev/null | grep -v '^no autoconf' | head -1)

# See if the autoconf package was installed through fink
ifeq (,$(strip $(AUTOCONF)))
AUTOCONF = $(shell which fink >/dev/null 2>&1 && echo `which fink`/../../lib/autoconf2.13/bin/autoconf)
endif

ifeq (,$(strip $(AUTOCONF)))
AUTOCONF=$(error Could not find autoconf 2.13)
endif

CONFIGURE_FLAGS := --disable-jemalloc

ifeq (eabi,$(findstring eabi,$(TARGET)))

CC ?= $(TARGET)-gcc
CPP ?= $(TARGET)-gcc -E
CXX ?= $(TARGET)-g++
AR ?= $(TARGET)-ar

CONFIGURE_FLAGS += --target=$(TARGET) --without-intl-api

	ifeq (androideabi,$(findstring androideabi,$(TARGET)))
		CONFIGURE_FLAGS += \
			--with-android-ndk=$(ANDROID_NDK) \
			--with-android-toolchain=$(ANDROID_TOOLCHAIN) \
			$(NULL)
	endif
else

CC ?= gcc
CPP ?= gcc -E
CXX ?= g++
AR ?= ar

endif

ifneq (,$(CARGO_FEATURE_DEBUGMOZJS))
	CONFIGURE_FLAGS += --enable-debug=-g --enable-optimize=-O0
endif

ifeq (windows,$(findstring windows,$(TARGET)))
	# msys2 sets CC=cc as default. however, there is no `cc.exe`.
	# overwrite it here.
	ifeq ($(CC),cc)
		CC = gcc
		CPP = gcc -E
	endif
	# cargo uses Windows native path. msys2 make unfortunately doesn't understand it.
	OUT_DIR:=$(shell cygpath "$(OUT_DIR)")
	# on windows, SM requires moztools which contains prebuilt libraries like glib and libIDL.
	# we don't need them, so just set any fake path.
	MOZ_TOOLS=$(OUT_DIR)
endif

SRC_DIR = $(shell pwd)

.PHONY : all
all:
	cd "mozjs/js/src" && \
	$(AUTOCONF) && \
	cd $(OUT_DIR) && \
	MOZ_TOOLS="$(MOZ_TOOLS)" CC="$(CC)" CPP="$(CPP)" CXX="$(CXX)" AR="$(AR)" \
	$(SRC_DIR)/mozjs/js/src/configure --enable-gczeal $(strip $(CONFIGURE_FLAGS))
	cd $(OUT_DIR) && make -f Makefile -j$(NUM_JOBS)

