From 4ca41dc4c0d664de566b365c5e9121c2bf4a9c43 Mon Sep 17 00:00:00 2001
From: Anthony Ramine <n.oxyde@gmail.com>
Date: Wed, 6 Apr 2016 10:42:36 +0200
Subject: Hide source hooks

---
 mozjs/js/src/jsfriendapi.h | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/mozjs/js/src/jsfriendapi.h b/mozjs/js/src/jsfriendapi.h
index bb0e08f..8d1f72d 100644
--- a/mozjs/js/src/jsfriendapi.h
+++ b/mozjs/js/src/jsfriendapi.h
@@ -438,28 +438,30 @@ class SourceHook {
     /**
      * Set |*src| and |*length| to refer to the source code for |filename|.
      * On success, the caller owns the buffer to which |*src| points, and
      * should use JS_free to free it.
      */
     virtual bool load(JSContext* cx, const char* filename, char16_t** src, size_t* length) = 0;
 };
 
+#ifndef RUST_BINDGEN
 /**
  * Have |cx| use |hook| to retrieve lazily-retrieved source code. See the
  * comments for SourceHook. The context takes ownership of the hook, and
  * will delete it when the context itself is deleted, or when a new hook is
  * set.
  */
 extern JS_FRIEND_API(void)
 SetSourceHook(JSContext* cx, mozilla::UniquePtr<SourceHook> hook);
 
 /** Remove |cx|'s source hook, and return it. The caller now owns the hook. */
 extern JS_FRIEND_API(mozilla::UniquePtr<SourceHook>)
 ForgetSourceHook(JSContext* cx);
+#endif
 
 extern JS_FRIEND_API(JS::Zone*)
 GetCompartmentZone(JSCompartment* comp);
 
 typedef bool
 (* PreserveWrapperCallback)(JSContext* cx, JSObject* obj);
 
 typedef enum  {
-- 
2.8.3

